[INCLUDE=presentation]
Title         : Flex
Sub Title     : css flexbox
Reveal Theme  : sky
Beamer Theme  : singapore

[TITLE]

# About flexbox

* 传统的布局方式 ( display + position + float ) 已经不能满足一些特殊布局 ( e.g. 垂直居中 ) 、网页伸缩、移动端适配等情况

* 09年，W3C提出的Flex布局，可以简便、完整、响应式地实现各种页面布局。并且被所有浏览器支持 ( `除了微信大魔王` ) 

* 基本概念：flexbox可以自动调整子元素的高和宽，来很好的填充任何显示设备中的可用显示空间，收缩内容防止内容溢出

# Terms
* 没错这里是图

![flex_terms]
[flex_terms]: images/flex_terms.png "flex_terms" { width:auto; max-width:90% }

## Details - 0
* 弹性容器 flex container
~~ Pre
通过设置display 属性的值为flex 或 inline-flex将其定义为弹性容器。
~~

* 弹性子元素 flex items
~~ Pre
弹性容器的每一个子元素变为一个弹性子元素。
~~

## details - 1
* 轴
~~ pre
主轴和侧轴两个，相互垂直。item沿着主轴的依次排列。
属性: flex-direction justify-content align-items align-self 
~~

* 方向
~~ pre
下 => 上 or 下 => 上 or 左 => 右 or 右 => 左
属性: order
~~

* 行 hang
~~ pre
一行 or 可换行
属性: flex-wrap
~~

* 尺寸
~~ pre
伸缩性
属性: flex：none | [ flex-grow ] || [ flex-shrink ] || [ flex-basis ]
~~

# 
![stop]
[stop]: images/stop.jpg "stop" { width:auto; max-width:90% }

# 这是给PM和UI/UX看的！

# 我不需要看如何实现，我要看效果, 效果你懂吗？

# you know?

# 
![go-on] 
[go-on]: images/go-on.jpg "go-on" { width:auto; max-width:90% }

# 举一些🌰

# 0. 骰子
布局出一个骰子的六个面

![touzi]

[touzi]: images/touzi.png "touzi" { width:auto; max-width:90% }

其实图上是四个面

# 先来一个点, 左上角的情况
![touzi1]

[touzi1]: images/touzi1.png "touzi1" { width:auto; max-width:90% }

```html
  <div class="box">
    <span class="item"></span>
  </div>
```

```
  .box {
    display: flex;
  }
```
# 依次类推, 一个点的情况

![touzi2]
```
  .box {
    display: flex;
    justify-content: center;
  }
```

[touzi2]: images/touzi2.png "touzi2" { width:auto; max-width:90% }

# 
![touzi3]
```
  .box {
    display: flex;
    justify-content: flex-end;
  }
```
[touzi3]: images/touzi3.png "touzi3" { width:auto; max-width:90% }

# 两个点的情况

![touzi4]

[touzi4]: images/touzi4.png "touzi4" { width:auto; max-width:90% }

```
  .box {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: center;
  }
```

## [骰子例子的代码](http://codepen.io/LandonSchropp/pen/KpzzGo)

# Grid Layout
Bootstrap基本的
![grid]

[grid]: images/grid.png "grid" { width:auto; max-width:90% }

# Grid Layout
百分比的布局
![grid1]

[grid1]: images/grid1.png "grid1" { width:auto; max-width:90% }

# Holy Grail Layout

一种最常见的网站布局, 页面从上到下, 分成三个部分: header，body，footer。其中body又水平分成三栏, 从左到右为: 导航、主栏、副栏。

# Holy Grail Layout
![holy-grial-layout]

[holy-grial-layout]: images/holy-grial-layout.jpg "holy-grial-layout" { width:auto; max-width:80% }

## [可以玩一玩这个网页](https://philipwalton.github.io/solved-by-flexbox/demos/holy-grail/)

# icon/image + texts
![easy]

[easy]: images/easy.png "easy" { width:auto; max-width:90% }

## 其他各种适合用Flex布局来解决的

![cases]

[cases]: images/cases.png "cases" { width:auto; max-width:80% }

# Thanks for watching

# 
![thanks]

[thanks]: images/thanks.png "thanks" { width:auto; max-width:90% }

## 众所周知，燎原web几乎每处都使用flex布局

# 前方高能预警，非战斗人员速速撤离

# 
![w1]
[w1]: images/w1.jpg "w1" { width:300px }

# 

![w2]
[w2]: images/w2.jpg "w2" { width:300px }

# 
![w3]
[w3]: images/w3.jpg "w3" { width:300px }

# 

![w4]
[w4]: images/w4.jpg "w4" { width:300px }

# 
![w5]
[w5]: images/w5.jpg "w5" { width:300px }

# 

![w6]
[w6]: images/w6.jpg "w6" { width:300px }

# 

![w8]
[w8]: images/w8.jpg "w8" { width:300px }

# 

![w9]
[w9]: images/w9.jpg "w9" { width:300px }

# 
那一天，人类终于回想起了，曾经一度被微信浏览器所支配的恐怖。

# 

![hehe]
[hehe]: images/hehe.jpg "hehe" { width:auto }